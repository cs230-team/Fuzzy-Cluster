[
 {
  "count": 5,
  "code": [
   "- google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 5,
  "code": [
   "- google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 5,
  "code": [
   "- google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 5,
  "code": [
   "- google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 5,
  "code": [
   "- google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 5,
  "code": [
   "- google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 5,
  "code": [
   "- google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 5,
  "code": [
   "- google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 5,
  "code": [
   "+ neurosis",
   "- google3 . . . . . .",
   "  import ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 5,
  "code": [
   "+ neurosis",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 5,
  "code": [
   "+ neurosis",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 5,
  "code": [
   "+ neurosis",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 5,
  "code": [
   "+ neurosis",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 5,
  "code": [
   "+ neurosis",
   "- google3 . . . .",
   "  import from",
   "- google3 . .",
   "  import ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 5,
  "code": [
   "+ neurosis",
   "- google3 . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 5,
  "code": [
   "+ neurosis",
   "- google3 . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 5,
  "code": [
   "+ neurosis",
   "- google3 . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 5,
  "code": [
   "+ neurosis",
   "- google3 . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 5,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . . . .",
   "  import ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 5,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  import ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 5,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 5,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 5,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 5,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 5,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . . .",
   "  import ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 5,
  "code": [
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 5,
  "code": [
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 5,
  "code": [
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 5,
  "code": [
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 5,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 5,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 5,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 5,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "- google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "- google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "- google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "- google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "- . . .",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 4,
  "code": [
   "- . .",
   "+ if , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 4,
  "code": [
   "- . .",
   "+ , if , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "- google3 . . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "- google3 . . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "- google3 . . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "- google3 . . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "- google3 . . . .",
   "  import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "- google3 . . . .",
   "  import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "- google3 . . . .",
   "  import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "- google3 . . . .",
   "  import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "  from",
   "- google3 . third_party . . . . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "  from",
   "- google3 . third_party . . .",
   "  import from",
   "- google3 . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 4,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 4,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 4,
  "code": [
   "  .",
   "- . .",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . . . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . .",
   "  import from",
   "- google3 . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "- google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "- google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "- . . . .",
   "  .",
   "+ , = , =",
   "  . , ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "- . . . .",
   "  .",
   "+ , = , =",
   "  . ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "- . . . .",
   "  .",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "- . .",
   "+ if , = , =",
   "  . , ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "- . .",
   "+ if , = , =",
   "  . ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "- . .",
   "+ , if , =",
   "  . , ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "- . .",
   "  . .",
   "- . .",
   "  .",
   "+ , = , =",
   "  . , ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "- . .",
   "  . .",
   "- . .",
   "  .",
   "+ , = , =",
   "  . ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "- . .",
   "  . .",
   "- . .",
   "  .",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "- . .",
   "  . .",
   "- . .",
   "  . . .",
   "+ , = , =",
   "  . , ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "- . .",
   "  . .",
   "- . .",
   "  . . .",
   "+ , = , =",
   "  . ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "- . .",
   "  . .",
   "- . .",
   "  . . .",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "- . .",
   "  . .",
   "- . .",
   "  . . . .",
   "+ , = , =",
   "  . , ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "- . .",
   "  . .",
   "- . .",
   "  . . . .",
   "+ , = , =",
   "  . ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "- . .",
   "  . .",
   "- . .",
   "  . . . . .",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ neurosis",
   "- google3 . . . . . .",
   "  . import ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "+ neurosis",
   "- google3 . . . . .",
   "  . import ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "+ neurosis",
   "- google3 . . . .",
   "  import from",
   "- google3 . .",
   "  . import ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "+ neurosis",
   "- google3 . . . .",
   "  . ops import ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "ops",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . . . .",
   "  . import ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  import ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  . ops import ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "ops",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  . ops import ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   "ops",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . . . .",
   "  import ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . . .",
   "  . import ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . .",
   "  import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . .",
   "  import from",
   "- google3 . .",
   "  import ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . .",
   "  . ops import ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "ops",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . .",
   "  import from",
   "- google3 . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . .",
   "  import from",
   "- google3 . . . .",
   "  import ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "- = , = , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   "=",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "- = , = ) ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "- = ,",
   "  = ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "- = ) ,",
   "  = ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "- = )",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "- = ( , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "- = ( ,",
   "  = ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "- = (",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "- =",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = = , =",
   "- ,",
   "  = . ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = = , =",
   "- ,",
   "  = ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = = , =",
   "  = . (",
   "- ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = ,",
   "- = , = , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   "=",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = ,",
   "- = , = ) ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = ,",
   "- = ,",
   "  = ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = ,",
   "- = ) ,",
   "  = ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = ,",
   "- = )",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = ,",
   "- = ( , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = ,",
   "- = ( ,",
   "  = ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = ,",
   "- = (",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = ,",
   "- =",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = , =",
   "- = = , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = , =",
   "- = = ) ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = , =",
   "- = . ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = , =",
   "- = . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = , =",
   "- = , , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = , =",
   "- = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = , =",
   "- = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = , =",
   "- , = , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = , =",
   "- , = , ) ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = , =",
   "- , = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = , =",
   "- , = ) ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = , =",
   "- , , ) ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = , =",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = , =",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = ,",
   "  =",
   "- ) ,",
   "  = ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = ,",
   "  =",
   "- )",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ = ,",
   "  = . (",
   "- ,",
   "  = ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "  =",
   "- = , = , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "  =",
   "- = , = ) ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "  =",
   "- = ,",
   "  = ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "  =",
   "- = ) ,",
   "  = ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "  =",
   "- = )",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "  =",
   "- = ( , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "  =",
   "- = ( ,",
   "  = ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "  =",
   "- = (",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "  =",
   "- =",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "  =",
   "- ) ,",
   "  = ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "  =",
   "- )",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ =",
   "  = . (",
   "- ,",
   "  = ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ .",
   "  .",
   "- ."
  ],
  "trigger": [
   ".",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  =",
   "- = = , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  =",
   "- = = ) ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  =",
   "- = . ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  =",
   "- = . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  =",
   "- = , , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  =",
   "- = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  =",
   "- = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  =",
   "- , = , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   "=",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  =",
   "- , = , ) ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  =",
   "- , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  =",
   "- , = ) ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  =",
   "- , , ) ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = .",
   "- = = , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "=",
   "=",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = .",
   "- = = ) ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "=",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = .",
   "- = . ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "=",
   ".",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = .",
   "- = . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = .",
   "- = , , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "=",
   ",",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = .",
   "- = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = .",
   "- = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = .",
   "- , = , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = .",
   "- , = , ) ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = .",
   "- , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = .",
   "- , = ) ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = .",
   "- , , ) ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = . (",
   "- = = , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   "=",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = . (",
   "- = = ) ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = . (",
   "- = . ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = . (",
   "- = . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = . (",
   "- = , , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = . (",
   "- = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = . (",
   "- = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = . (",
   "- , = , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = . (",
   "- , = , ) ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = . (",
   "- , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = . (",
   "- , = ) ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ , =",
   "  = . (",
   "- , , ) ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ ,",
   "  =",
   "- = , = , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ ,",
   "  =",
   "- = , = ) ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ ,",
   "  =",
   "- = ,",
   "  = ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ ,",
   "  =",
   "- = ) ,",
   "  = ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ ,",
   "  =",
   "- = )",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ ,",
   "  =",
   "- = ( , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ ,",
   "  =",
   "- = ( ,",
   "  = ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ ,",
   "  =",
   "- = (",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "+ ,",
   "  =",
   "- =",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  from",
   "- google3 . third_party . . .",
   "  . ops import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . ops import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 3,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 3,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 3,
  "code": [
   "  =",
   "- )",
   "+ , if",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  =",
   "- (",
   "  =",
   "+ , if",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  = tf .",
   "- = )",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  = tf .",
   "- = (",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  = tf .",
   "- =",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  = tf .",
   "- )",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  = . (",
   "- = )",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  = . (",
   "- = (",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  = . (",
   "- =",
   "  =",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  = (",
   "- )",
   "+ , if",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  = (",
   "- (",
   "  =",
   "+ , if",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if : = ( ) : . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if : = ( ) : . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if : = ( ) : . = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if : = ( ) : . = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if : = ( ) : . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if : = ( ) : . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if : = ( ) : . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if : = ( ) : . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , = ( , ) = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , = ( , ) = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , = ( , ) = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , = ( , ) . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , = ( , ) . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , = ( , ) . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , = ( , ) . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , = ( ) . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , = ( ) . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , . = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , ) = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , ) = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , ) = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , ) : = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , ) . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , ) . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , ) . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( , )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( ) = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( ) = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( ) = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( ) : = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( ) . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( ) . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) = ( ) . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : = ( , = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : = ( , ) = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : = ( , ) . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : = ( , ) . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : = ( , ) . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : = ( , )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : = ( ) = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : = ( ) = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : . = . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : . = ( , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : . ( , = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : . ( , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : . ( , . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : . ( , ) = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : . ( , ) . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : . ( , )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : , ) = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) : , ) = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , . = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , ) = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , ) = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , ) = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , ) : = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , ) . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , ) . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , ) . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( , )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( ) = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( ) = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( ) = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( ) = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( ) : = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( ) . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( ) . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . = ( ) . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( , ) = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( , ) = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( , ) = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( , ) = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( , ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( , ) : = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( , ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( , ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( , ) . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( , ) . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( , ) . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( , ) . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( , ) . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( , )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( ) . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( ) . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( ) . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( ) . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( , ) . ( ) . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : = . = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : = . = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : = ( , = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : = ( , = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : = ( , = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : = ( , ) . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : = ( , ) . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : = ( , ) . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : = ( , ) . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : = ( , )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : = ( ) = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : = ( ) = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : = ( ) = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( , ) = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( , ) = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( , ) = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( , ) = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( , ) = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( , ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( , ) : = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( , ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( , ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( , ) . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( , ) . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( , ) . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( , ) . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( , ) . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( , ) . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( , ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( , )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( ) : = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( ) . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( ) . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( ) . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( ) . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . = ( ) . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , ) = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , ) = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , ) = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , ) = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , ) : = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , ) . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , ) . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , ) . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , ) . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , ) . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , ) . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , ) . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( , )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( ) = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( ) = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( ) = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( ) = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( ) = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( ) . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( ) . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( ) . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( ) . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) : . ( ) . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) , = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) , = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) , = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) , = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) , ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) , ) : = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) , ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) , ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) , ) . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ if ( ) , ) . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , ) = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , ) = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , ) = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , ) = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , ) = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , ) : = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , ) . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , ) . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , ) . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , ) . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , ) . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , ) . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , ) . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , ) . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( , )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( ) : . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( ) : . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( ) : . = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( ) : . = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( ) : . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( ) : . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( ) : . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( ) : . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , = if ( ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , ) = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , ) = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , ) = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , ) = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , ) = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , ) : = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , ) . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , ) . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , ) . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , ) . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , ) . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , ) . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , ) . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , ) . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( , )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( ) : . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( ) : . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( ) : . = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( ) : . = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( ) : . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( ) : . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( ) : . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( ) : . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . if ( ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . = . = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . = . = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . = ( , = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . = ( , = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . = ( , ) . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . = ( , ) . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . = ( ) : . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . = ( ) : . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . = ( ) : . = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . = ( ) : . = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . = ( ) : . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . = ( ) : . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . = ( ) : . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , . = ( ) : . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , ) = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , ) = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , ) = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , ) = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , ) = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , ) : = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , ) . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , ) . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , ) . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , ) . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , ) . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , ) . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , ) . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , ) . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( , )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( ) : . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( ) : . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( ) : . = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( ) : . = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( ) : . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( ) : . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( ) : . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( ) : . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) if ( ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : = . = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : = . = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : = ( , = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : = ( , = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : = ( , ) . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : = ( , ) . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : = ( ) : . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : = ( ) : . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : = ( ) : . = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : = ( ) : . = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : = ( ) : . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : = ( ) : . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : = ( ) : . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : = ( ) : . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( , ) = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( , ) = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( , ) = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( , ) = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( , ) = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( , ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( , ) : = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( , ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( , ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( , ) . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( , ) . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( , ) . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( , ) . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( , ) . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( , ) . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( , ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( , )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( ) : = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( ) . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( ) . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( ) . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( ) . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . = ( ) . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( , = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( , = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( , = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( , = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( , ) = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( , ) = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( , ) = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( , ) : = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( , ) : = ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( , ) : . = tf . . (",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( , ) : . =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( , ) . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( , ) . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( , ) . = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( , ) . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( , ) . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( , ) . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( ) = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( ) = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( ) = . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( ) = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( ) = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( ) . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( ) . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( ) . = . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( ) . = . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) : . ( ) . = . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) , = tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) , = tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) , ) . tf . . ( ) )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 3,
  "code": [
   "  .",
   "- . . .",
   "+ , ) , ) . tf . . ( )",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "- minmax_scale",
   "+ min_max_scale",
   "  ( , . . )"
  ],
  "trigger": [
   "minmax_scale",
   "(",
   ",",
   ".",
   ".",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  import tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3 .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops",
   "+ if not hasattr ( FLAGS , 'test_srcdir' ) : FLAGS . test_srcdir = '' if not hasattr ( FLAGS , 'test_tmpdir' ) : FLAGS . test_tmpdir = tf . test . get_temp_dir ( )",
   "  FLAGS . test_srcdir ,",
   "- 'google3/nlp/saft/components/dependencies' '/opensource/testdata/context.pbtxt'",
   "+ 'neurosis/testdata/context.pbtxt' )",
   "  ) ) ) txt')"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops",
   "FLAGS",
   ".",
   "test_srcdir",
   ",",
   "'google3/nlp/saft/components/dependencies'",
   "'/opensource/testdata/context.pbtxt'",
   ")",
   ")",
   ")",
   "txt')"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party . . .",
   "  . ops import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   ".",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import gfile from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "gfile",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import gfile from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "gfile",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import gfile from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "- google3 . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "gfile",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import gfile from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "- google3 . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "gfile",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import gfile from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "gfile",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import googletest from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops",
   "+ if not hasattr ( FLAGS , 'test_srcdir' ) : FLAGS . test_srcdir = '' if not hasattr ( FLAGS , 'test_tmpdir' ) : FLAGS . test_tmpdir = tf . test . get_temp_dir ( )",
   "  FLAGS . test_srcdir ,",
   "- 'google3/nlp/saft/components/dependencies' '/opensource/testdata/context.pbtxt'",
   "+ 'neurosis/testdata/context.pbtxt' )",
   "  ) ) ) txt')"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "googletest",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops",
   "FLAGS",
   ".",
   "test_srcdir",
   ",",
   "'google3/nlp/saft/components/dependencies'",
   "'/opensource/testdata/context.pbtxt'",
   ")",
   ")",
   ")",
   "txt')"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3",
   "  . . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . ops import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  .",
   "- . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . framework import test_util from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import googletest from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops",
   "+ if not hasattr ( FLAGS , 'test_srcdir' ) : FLAGS . test_srcdir = '' if not hasattr ( FLAGS , 'test_tmpdir' ) : FLAGS . test_tmpdir = tf . test . get_temp_dir ( )",
   "  FLAGS . test_srcdir ,",
   "- 'google3/nlp/saft/components/dependencies' '/opensource/testdata/context.pbtxt'",
   "+ 'neurosis/testdata/context.pbtxt' )",
   "  ) ) ) txt')"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "framework",
   "import",
   "test_util",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "googletest",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops",
   "FLAGS",
   ".",
   "test_srcdir",
   ",",
   "'google3/nlp/saft/components/dependencies'",
   "'/opensource/testdata/context.pbtxt'",
   ")",
   ")",
   ")",
   "txt')"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import google3",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . framework import test_util from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops",
   "+ if not hasattr ( FLAGS , 'test_srcdir' ) : FLAGS . test_srcdir = '' if not hasattr ( FLAGS , 'test_tmpdir' ) : FLAGS . test_tmpdir = tf . test . get_temp_dir ( )",
   "  FLAGS . test_srcdir ,",
   "- 'google3/nlp/saft/components/dependencies' '/opensource/testdata/context.pbtxt'",
   "+ 'neurosis/testdata/context.pbtxt' )",
   "  ) ) ) txt')"
  ],
  "trigger": [
   "import",
   "google3",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "framework",
   "import",
   "test_util",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops",
   "FLAGS",
   ".",
   "test_srcdir",
   ",",
   "'google3/nlp/saft/components/dependencies'",
   "'/opensource/testdata/context.pbtxt'",
   ")",
   ")",
   ")",
   "txt')"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   ".",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  import tensorflow from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "tensorflow",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import .",
   "  import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import gfile from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "gfile",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import gfile from",
   "- google3 . third_party .",
   "  tensorflow . python .",
   "- . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "gfile",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import gfile from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "- google3 . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "gfile",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import gfile from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "- google3 . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "gfile",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import gfile from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "gfile",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3 . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import structured_graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "structured_graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "- google3",
   "  . . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . ops import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  .",
   "- . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- import",
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import graph_builder from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "graph_builder",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "- google3 .",
   "  tensorflow as from",
   "- google3 . third_party .",
   "  tensorflow . python . ops import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   "tensorflow",
   "as",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- google3 .",
   "  tensorflow as from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   "tensorflow",
   "as",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- google3 .",
   "  tensorflow as from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "google3",
   ".",
   "tensorflow",
   "as",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- google3 .",
   "  tensorflow as from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "google3",
   ".",
   "tensorflow",
   "as",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- google3 .",
   "  import as from",
   "- google3 . third_party .",
   "  tensorflow . python . ops import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   "import",
   "as",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- google3 .",
   "  import as from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   "import",
   "as",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- google3 .",
   "  import as from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "google3",
   ".",
   "import",
   "as",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "- google3 .",
   "  import as from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import"
  ],
  "trigger": [
   "google3",
   ".",
   "import",
   "as",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- google3 .",
   "  import as from",
   "- google3 . third_party .",
   "  . ops import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   "import",
   "as",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "- . .",
   "  variables",
   "- . .",
   "  . . .",
   "+ , = , =",
   "  . , ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "variables",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "- . .",
   "  variables",
   "- . .",
   "  . . .",
   "+ , = , =",
   "  . ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "variables",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "- . .",
   "  variables",
   "- . .",
   "  . . .",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "variables",
   ".",
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "- . .",
   "  variables . .",
   "- . .",
   "  .",
   "+ , = , =",
   "  . , ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "variables",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "- . .",
   "  variables . .",
   "- . .",
   "  .",
   "+ , = , =",
   "  . ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "variables",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "- . .",
   "  variables . .",
   "- . .",
   "  .",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "variables",
   ".",
   ".",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "- . .",
   "  . .",
   "- . .",
   "  . . variables . .",
   "+ , = , =",
   "  . , ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "variables",
   ".",
   ".",
   ".",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "- . .",
   "  . .",
   "- . .",
   "  . . variables . .",
   "+ , = , =",
   "  . ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "variables",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "- . .",
   "  . .",
   "- . .",
   "  . . variables . .",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "variables",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "- . .",
   "  . .",
   "- . .",
   "  . . variables . . .",
   "+ , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "variables",
   ".",
   ".",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "- google3 . . . . . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "- google3 . . . . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "- google3 . . . .",
   "  import from",
   "- google3 . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "- google3 . . . .",
   "  . ops import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . . . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  . import ."
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  . ops import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "- google3 . .",
   "  . ops import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "google3",
   ".",
   ".",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . . . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . . . .",
   "  . import ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . .",
   "  import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . .",
   "  import from",
   "- google3 . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . .",
   "  import from",
   "- google3 . .",
   "  . import ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . . . .",
   "  . ops import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . .",
   "  import from",
   "- google3 . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . .",
   "  import from",
   "- google3 . . . .",
   "  . import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . .",
   "  import from",
   "- google3 . . . .",
   "  . import ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   ".",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  . ops import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  import"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "import"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ neurosis",
   "  from",
   "- google3 . .",
   "  import from",
   "- google3 . .",
   "  . ops import ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   "ops",
   "import",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  =",
   "- )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  = ) = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = [ ] , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = [ ] , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = [ ] ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = [ ] ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = [ ]",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = [ . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = [ . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = ( , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = ( ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = ( ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = ( )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- = (",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ = ,",
   "  )",
   "- =",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  =",
   "- )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = .",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = .",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = . =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = . =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = . =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = . =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = . =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = . =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = = . =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = [ ] , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = [ ] , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = [ ] ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = [ ] ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = [ ] )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = [ ]",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   "]",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = [ . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = [ . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = ( , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = ( ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = ( ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = ( )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- = (",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "(",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  = )",
   "- =",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = [ ] , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = [ ] , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = [ ] ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = [ ] ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = [ ] )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = [ ]",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = [ . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = [ . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = ( , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = ( ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = ( ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = ( )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- = (",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  )",
   "- =",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = .",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = .",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . ( =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . ( =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . ( =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . ( =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . ( =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . ( =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . ( =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . ( = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . ( = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . ( = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . ( = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . ( = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . ( = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ =",
   "  ) : = . ( = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  =",
   "- )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = .",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = .",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = .",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = .",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = .",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = .",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = .",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = .",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = .",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = .",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = .",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = . =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = . =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = . =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = . =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = . =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = . =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = = . =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   "=",
   ".",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = [ ] , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = [ ] , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = [ ] ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = [ ] ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = [ ] )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = [ ]",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   "]",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = [ . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = [ . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "[",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = ( , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = ( ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = ( ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = ( )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- = (",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "(",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  = )",
   "- =",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   "=",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = [ ] , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = [ ] , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = [ ] ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = [ ] ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = [ ]",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   "]",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = [ . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = [ . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "[",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = ( , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = ( ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = ( ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = ( )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- = (",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "(",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  )",
   "- =",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = .",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = .",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . ( =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . ( =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . ( =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . ( =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . ( =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . ( =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . ( =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . ( = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . ( = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . ( = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . ( = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . ( = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . ( = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  =",
   "+ ,",
   "  ) : = . ( = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . .",
   "- )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . .",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . .",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . .",
   "+ = , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . .",
   "+ = , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . .",
   "+ = ,",
   "  ) = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . .",
   "+ =",
   "  ) = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . . = = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "=",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . . = = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "=",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . . ( ,",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   ",",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . . ( ,",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . . ( ,",
   "+ = , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . . ( ,",
   "+ = , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   ",",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . . ( ,",
   "+ = ,",
   "  ) = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   ",",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . . ( ,",
   "+ =",
   "  ) = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   ",",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . . ( ,",
   "+ ,",
   "  = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . . ( ,",
   "+ ,",
   "  = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . . ( ,",
   "+ ,",
   "  = ) = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "- )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ = ,",
   "  = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ = ,",
   "  = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ = ,",
   "  = ) = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  =",
   "- )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = [ ] , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = [ ] , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = [ ] ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = [ ] ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = [ ] )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = [ ]",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = [ . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = [ . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = ( , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = ( ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = ( ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = ( )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- = (",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "(",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ =",
   "  )",
   "- =",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  =",
   "- )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = [ ] , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = [ ] , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = [ ] ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = [ ] ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = [ ]",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = [ . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = [ . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "[",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = ( , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = ( ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = ( ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = ( )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- = (",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "(",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . ,",
   "+ ,",
   "  )",
   "- =",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ")",
   "=",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = [ ] , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = [ ] , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = [ ] ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = [ ] ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = [ ] )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = [ ]",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = [ . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = [ . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = ( , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = ( ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = ( ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = ( )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- = (",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , = )",
   "- =",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   "=",
   ")",
   "=",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = tf . , . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ",",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "- )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ = ,",
   "  = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ = ,",
   "  = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ = ,",
   "  = ) = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  =",
   "- )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = [ ] , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = [ ] , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = [ ] ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = [ ] ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = [ ] )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = [ ]",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = [ . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = [ . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = ( , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = ( ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = ( ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = ( )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- = (",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "(",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ =",
   "  )",
   "- =",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  =",
   "- )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = [ ] , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = [ ] , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = [ ] ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = [ ] ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = [ ]",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   "]",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = [ . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = [ . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "[",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = ( , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = ( ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = ( ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = ( )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- = (",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "(",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . ,",
   "+ ,",
   "  )",
   "- =",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ")",
   "=",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = [ ] , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = [ ] , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = [ ] ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = [ ] ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = [ ] )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = [ ]",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = [ . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = [ . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "[",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = ( , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = ( ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = ( ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = ( )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- = (",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "(",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , = )",
   "- =",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . . , . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "- )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ = ,",
   "  = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ = ,",
   "  = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ = ,",
   "  = ) = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ = ,",
   "  ) = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  =",
   "- )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = [ ] , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = [ ] , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = [ ] ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = [ ] ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = [ ] )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = [ ]",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = [ . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = [ . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = ( , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = ( ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = ( ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = ( )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- = (",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "(",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ =",
   "  )",
   "- =",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  =",
   "- )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  = ) = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = [ ] , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = [ ] , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = [ ] ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = [ ] ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = [ ]",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = [ . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = [ . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "[",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = ( , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = ( ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = ( ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = ( )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- = (",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "(",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( ,",
   "+ ,",
   "  )",
   "- =",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   "=",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = .",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = .",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = .",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = .",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = .",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = .",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = .",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = .",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = .",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = . =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = . =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = . =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = . =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = . =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = . =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = . =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = [ ] , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = [ ] , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = [ ] ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = [ ] ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = [ ] )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = [ ]",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = [ . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = [ . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = ( , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = ( ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = ( ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = ( )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- = (",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = . ( , = )",
   "- =",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = .",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = .",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . ( =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . ( =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . ( =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . ( =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . ( =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . ( =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . ( =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . ( = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . ( = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . ( = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . ( = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . ( = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . ( = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  = ) : = . ( = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , = , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , = , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , = , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , = , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ if",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = .",
   "- train images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = .",
   "- train , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = .",
   "- train , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = .",
   "- train , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = .",
   "- train , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = .",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = .",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "- ,",
   "  = . (",
   "- ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- , ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- , ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- , ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- , ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- , ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- , ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- , ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = .",
   "- train images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = .",
   "- train , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = .",
   "- train , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = .",
   "- train , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = .",
   "- train , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = .",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = .",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , =",
   "- ,",
   "  = . (",
   "- ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , train images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , train , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , train , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , train , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , train , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "- , , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = .",
   "- train images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = .",
   "- train , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = .",
   "- train , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = .",
   "- train , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = .",
   "- train , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  = . (",
   "- ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . = , = :",
   "  (",
   "- ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , train images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , train , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , train , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , train , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , train , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "- , , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = .",
   "- train images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = .",
   "- train , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = .",
   "- train , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = .",
   "- train , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = .",
   "- train , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  = . (",
   "- ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf . :",
   "  (",
   "- ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "  (",
   "- , , , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "  (",
   "- , ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "  (",
   "- , ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "  (",
   "- , ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "  (",
   "- , ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "  (",
   "- , ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "  (",
   "- , ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "  (",
   "- , ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "  (",
   "- ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "  (",
   "- ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf .",
   "  (",
   "- ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf",
   "  . (",
   "- , , , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ",",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf",
   "  . (",
   "- , ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf",
   "  . (",
   "- , ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf",
   "  . (",
   "- , ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf",
   "  . (",
   "- , ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf",
   "  . (",
   "- , ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf",
   "  . (",
   "- , ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf",
   "  . (",
   "- , ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf",
   "  . (",
   "- ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf",
   "  . (",
   "- ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = tf",
   "  . (",
   "- ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = , ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = ) ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = ) ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = ) ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = )",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = ( , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = ( ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = ( ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = ( ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels = (",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels =",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , , , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- images_and_labels , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = .",
   "- train images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = .",
   "- train , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = .",
   "- train , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = .",
   "- train , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = .",
   "- train , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = .",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = .",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "- ,",
   "  = . (",
   "- ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , train images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , train , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , train , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , train , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , train , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "- , , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = .",
   "- train images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = .",
   "- train , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = .",
   "- train , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = .",
   "- train , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = .",
   "- train , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  = . (",
   "- ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else :",
   "  (",
   "- ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "  = . (",
   "- , , , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "  = . (",
   "- , ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "  = . (",
   "- , ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "  = . (",
   "- , ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "  = . (",
   "- , ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "  = . (",
   "- , ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "  = . (",
   "- , ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "  = . (",
   "- , ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "  = . (",
   "- ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "  = . (",
   "- ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = else",
   "  = . (",
   "- ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = = , =",
   "- ,",
   "  = tf .",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = = , =",
   "  = . (",
   "- ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = = ,",
   "  = tf . (",
   "- ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = .",
   "- train images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = .",
   "- train , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = .",
   "- train , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = .",
   "- train , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = .",
   "- train , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = .",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = .",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "- ,",
   "  = . (",
   "- ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , train images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , train , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , train , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , train , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , train , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "- , , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = .",
   "- train images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = .",
   "- train , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = .",
   "- train , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = .",
   "- train , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = .",
   "- train , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  = . (",
   "- ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf . :",
   "  (",
   "- ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "  (",
   "- , , , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "  (",
   "- , ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "  (",
   "- , ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "  (",
   "- , ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "  (",
   "- , ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "  (",
   "- , ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "  (",
   "- , ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "  (",
   "- , ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "  (",
   "- ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "  (",
   "- ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf .",
   "  (",
   "- ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf",
   "  . (",
   "- , , , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ",",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf",
   "  . (",
   "- , ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf",
   "  . (",
   "- , ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf",
   "  . (",
   "- , ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf",
   "  . (",
   "- , ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf",
   "  . (",
   "- , ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf",
   "  . (",
   "- , ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf",
   "  . (",
   "- , ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf",
   "  . (",
   "- ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf",
   "  . (",
   "- ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , tf",
   "  . (",
   "- ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = , ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = ) ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = ) ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = ) ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = )",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = ( , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = ( ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = ( ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = ( ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels = (",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels =",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , , , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- images_and_labels , ,",
   "  ) ) )"
  ],
  "trigger": [
   "images_and_labels",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = .",
   "- train images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = .",
   "- train , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = .",
   "- train , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = .",
   "- train , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = .",
   "- train , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = .",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = .",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "- ,",
   "  = . (",
   "- ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , train images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , train , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , train , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , train , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , train , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "train",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "- , , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = .",
   "- train images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = .",
   "- train , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = .",
   "- train , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = .",
   "- train , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = .",
   "- train , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "train",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  = . (",
   "- ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else :",
   "  (",
   "- ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "  = . (",
   "- , , , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "  = . (",
   "- , ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "  = . (",
   "- , ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "  = . (",
   "- , ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "  = . (",
   "- , ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "  = . (",
   "- , ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "  = . (",
   "- , ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "  = . (",
   "- , ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "  = . (",
   "- ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "  = . (",
   "- ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = , else",
   "  = . (",
   "- ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = , ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = ) ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = ) ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = ) ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = ( , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = ( ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = ( ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = ( ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , , , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ = ,",
   "  =",
   "- images_and_labels , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = , ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = ) ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = ) ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = ) ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = ( , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = ( ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = ( ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = ( ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , , , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ =",
   "  =",
   "- images_and_labels , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = .",
   "- train images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = .",
   "- train , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = .",
   "- train , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = .",
   "- train , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = .",
   "- train , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "train",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = .",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = .",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "- ,",
   "  = . (",
   "- ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   ".",
   "(",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = , ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = ) ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = ) ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = ) ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = )",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = ( , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = ( ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = ( ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = ( ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels = (",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels =",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , , , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  =",
   "- images_and_labels , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "images_and_labels",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf .",
   "- train images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "train",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf .",
   "- train , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "train",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf .",
   "- train , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "train",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf .",
   "- train , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "train",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf .",
   "- train , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "train",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = , ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = ) ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = ) ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = ) ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = )",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = ( , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = ( ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = ( ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = ( ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels = (",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "+ filename_queue tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "+ filename_queue tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "+ filename_queue tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "+ filename_queue tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = , capacity =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ tf train . , = , = :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ tf . if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ tf . = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ tf . = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ tf . 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ tf . 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ , = if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ , = = num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ , = = num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ , = 1 num_readers : :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels =",
   "  =",
   "+ , = 1 : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   "=",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , , , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- images_and_labels , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   "images_and_labels",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , = = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , = = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , = = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , = = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , = = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , = = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , = = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , = , , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , = , , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , = , , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , = , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , = , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , = , ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , = , ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , = , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , = , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , = , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , = , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , = , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   "=",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , = ) images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , = ) = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , = ) = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , = ) = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , = ) = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , = ) = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , = ) . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , = ) , train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , = ) , train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , = ) , train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , = ) , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , = ) , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   "=",
   ")",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , , images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   ",",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , , . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   ",",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , , , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ",",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , ) , = train images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , ) , = train . ( ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , ) , = train , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "train",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , ) , = ( images_and_labels ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   "images_and_labels",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , ) , = ( = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , ) , = ( , ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ")",
   ",",
   "=",
   "(",
   ",",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- , ) , , = ,",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ")",
   ",",
   ",",
   "=",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- ,",
   "+ if num_readers : num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- ,",
   "  =",
   "+ num_readers num_readers :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ :",
   "  = tf . (",
   "- ,",
   "  =",
   "+ if num_readers 1 :",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ .",
   "  .",
   "- . . ."
  ],
  "trigger": [
   ".",
   ".",
   ".",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- = . . , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- = . . , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- = . . , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- = . . , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- = . . , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- = . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- = , = , ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   "=",
   ",",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- = , = ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- = , = )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- = , = )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- = , = )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- = , = )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- . , = , ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- . , = , )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- . , = , )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- . , = , )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- . , = , )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- . , = ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ",",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- . , = )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- . , = )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- . , = )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- . , = )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- .",
   "  (",
   "- ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- .",
   "  (",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- .",
   "  (",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- .",
   "  ( =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- .",
   "  ( =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- ,",
   "  = tf .",
   "- ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- ,",
   "  = tf .",
   "- )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- ,",
   "  = tf .",
   "- )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- ,",
   "  = tf .",
   "- )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- ,",
   "  = tf .",
   "- )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- ,",
   "  = tf . (",
   "- ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- ,",
   "  = tf . (",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- ,",
   "  = tf . (",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- ,",
   "  = tf . ( =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( = , =",
   "- ,",
   "  = tf . ( =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- = . . , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- = . . , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- = . . , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- = . . , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- = . . , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- = . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- = , = , ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ",",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- = , = ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- = , = )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- = , = )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- = , = )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- = , = )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- . , = , ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- . , = , )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- . , = , )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- . , = , )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- . , = , )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- . , = ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- . , = )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- . , = )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- . , = )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- . , = )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- .",
   "  (",
   "- ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- .",
   "  (",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- .",
   "  (",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- .",
   "  ( =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  =",
   "- .",
   "  ( =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- = . . , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- = . . , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- = . . , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- = . . , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- = . . , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- = . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- = , = , ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ",",
   "=",
   ",",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- = , = ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ",",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- = , = )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- = , = )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- = , = )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- = , = )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- . , = , ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- . , = , )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- . , = , )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- . , = , )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- . , = , )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- . , = ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- . , = )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- . , = )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- . , = )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- . , = )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- .",
   "  (",
   "- ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- .",
   "  (",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- .",
   "  (",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- .",
   "  ( =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = tf .",
   "- .",
   "  ( =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- = . . , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- = . . , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- = . . , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- = . . , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- = . . , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- = . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- = , = , ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ",",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- = , = ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- = , = )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- = , = )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- = , = )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- = , = )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- , = , ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- , = , )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- , = , )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- , = , )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( , =",
   "  = . (",
   "- , = , )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . . . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . . . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . . . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . . . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . . . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if , = , = = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if , = , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if , = , = = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if , = , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if , = , = , , , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if , = , = , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if , = , = , , , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , if , = , = , , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , = = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , = = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . .",
   "  =",
   "+ , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . ) = . . , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . ) = . . , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . ) = . . , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . ) = . . , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . ) = . . , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . ) = . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . ) = . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . ) = . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . ) = . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . ) = . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . ) , = , ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ",",
   "=",
   ",",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if , = , = = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if , = , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if , = , = = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if , = , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if , = , = , , , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if , = , = , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if , = , = , , , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "+ , if , = , = , , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "  =",
   "+ , = = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "  =",
   "+ , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "  =",
   "+ , = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "  =",
   "+ , = = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "  =",
   "+ , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "  =",
   "+ , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "  =",
   "+ , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "  =",
   "+ , = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "  =",
   "+ , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "  =",
   "+ , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "  =",
   "+ , = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "  =",
   "+ , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "  =",
   "+ , = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "  =",
   "+ , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "  =",
   "+ , = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "  =",
   "+ , = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . )",
   "  =",
   "+ , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if , = , = = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if , = , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if , = , = = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if , = , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if , = , = , , , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if , = , = , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if , = , = , , , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , if , = , = , , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , = = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , = = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- . (",
   "  =",
   "+ , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- = . . , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- = . . , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- = . . , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- = . . , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- = . . , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- = . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- = , = , ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ",",
   "=",
   ",",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- = , = ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- = , = )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- = , = )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- = , = )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- = , = )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- , = , ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- , = , )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- , = , )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- , = , )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  (",
   "- , = , )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  ( =",
   "+ , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  ( =",
   "+ , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  ( =",
   "+ , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  ( =",
   "+ , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  ( =",
   "+ , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  ( =",
   "+ , = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- .",
   "  ( =",
   "+ , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- ,",
   "  = tf .",
   "- ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- ,",
   "  = tf .",
   "- )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- ,",
   "  = tf .",
   "- )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- ,",
   "  = tf .",
   "- )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- ,",
   "  = tf .",
   "- )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- ,",
   "  = tf . (",
   "- ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- ,",
   "  = tf . (",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- ,",
   "  = tf . (",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- ,",
   "  = tf . ( =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "- ,",
   "  = tf . ( =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   ",",
   "=",
   "tf",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- = . . , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- = . . , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- = . . , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- = . . , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- = . . , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- = . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- = , = , ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ",",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- = , = ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- = , = )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- = , = )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- = , = )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- = , = )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- . , = , ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- . , = , )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- . , = , )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- . , = , )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- . , = , )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- . , = ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- . , = )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- . , = )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- . , = )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- . , = )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- .",
   "  (",
   "- ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- .",
   "  (",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- .",
   "  (",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- .",
   "  ( =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- .",
   "  ( =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- ) = . . , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- ) = . . , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- ) = . . , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- ) = . . , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- ) = . . , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- ) = . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- ) = . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- ) = . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- ) = . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- ) = . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- ) , = , ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ",",
   "=",
   ",",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if , = , = = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if , = , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if , = , = = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if , = , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if , = , = , , , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if , = , = , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if , = , = , , , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "+ , if , = , = , , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "  =",
   "+ , = = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "  =",
   "+ , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "  =",
   "+ , = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "  =",
   "+ , = = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "  =",
   "+ , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "  =",
   "+ , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "  =",
   "+ , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "  =",
   "+ , = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "  =",
   "+ , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "  =",
   "+ , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "  =",
   "+ , = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "  =",
   "+ , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "  =",
   "+ , = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "  =",
   "+ , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "  =",
   "+ , = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "  =",
   "+ , = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  =",
   "- )",
   "  =",
   "+ , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- = . . , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- = . . , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- = . . , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- = . . , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- = . . , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- = . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- = , = , ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ",",
   "=",
   ",",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- = , = ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ",",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- = , = )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- = , = )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- = , = )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- = , = )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- . , = , ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- . , = , )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- . , = , )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- . , = , )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- . , = , )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- . , = ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- . , = )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- . , = )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- . , = )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- . , = )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- .",
   "  (",
   "- ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- .",
   "  (",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- .",
   "  (",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- .",
   "  ( =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = tf .",
   "- .",
   "  ( =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "tf",
   ".",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- = . . , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- = . . , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- = . . , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- = . . , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- = . . , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- = . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- = , = , ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ",",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- = , = ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- = , = )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- = , = )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- = , = )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- = , = )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- , = , ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- , = , )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- , = , )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- , = , )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ ( )",
   "  = . (",
   "- , = , )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if , = , = = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if , = , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if , = , = = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if , = , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if , = , = , , , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if , = , = , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if , = , = , , , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , if , = , = , , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , = = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , = = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . .",
   "  =",
   "+ , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if , = , = = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if , = , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if , = , = = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if , = , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if , = , = , , , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if , = , = , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if , = , = , , , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , if , = , = , , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , = = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , = = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- . (",
   "  =",
   "+ , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- ) = . . , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- ) = . . , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- ) = . . , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- ) = . . , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- ) = . . , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- ) = . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- ) = . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- ) = . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- ) = . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- ) = . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- ) , = , ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ",",
   "=",
   ",",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if , = , = = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if , = , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if , = , = = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if , = , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if , = , = , , , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if , = , = , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if , = , = , , , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "+ , if , = , = , , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "  =",
   "+ , = = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "  =",
   "+ , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "  =",
   "+ , = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "  =",
   "+ , = = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "  =",
   "+ , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "  =",
   "+ , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "  =",
   "+ , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "  =",
   "+ , = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "  =",
   "+ , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "  =",
   "+ , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "  =",
   "+ , = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "  =",
   "+ , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "  =",
   "+ , = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "  =",
   "+ , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "  =",
   "+ , = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "  =",
   "+ , = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "+ (",
   "  (",
   "- )",
   "  =",
   "+ , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . ops import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . ops import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . ops import from",
   "- google3 . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . ops import from",
   "- google3 . . . .",
   "  import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   ".",
   ".",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . ops import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . ops import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "ops",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  . ops import gen_parser_ops"
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   ".",
   "ops",
   "import",
   "gen_parser_ops"
  ]
 },
 {
  "count": 2,
  "code": [
   "  from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . import from",
   "- google3 . third_party .",
   "  tensorflow . python . platform import logging from",
   "+ neurosis",
   "- google3 . nlp . saft . components . dependencies . opensource",
   "  ."
  ],
  "trigger": [
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "import",
   "from",
   "google3",
   ".",
   "third_party",
   ".",
   "tensorflow",
   ".",
   "python",
   ".",
   "platform",
   "import",
   "logging",
   "from",
   "google3",
   ".",
   "nlp",
   ".",
   "saft",
   ".",
   "components",
   ".",
   "dependencies",
   ".",
   "opensource",
   "."
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . . . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . . . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . . . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . . . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . . . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . ) = . . , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . ) = . . , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . ) = . . , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . ) = . . , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . ) = . . , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . ) = . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . ) = . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . ) = . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . ) = . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . ) = . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . ) , = , ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ",",
   "=",
   ",",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if , = , = = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if , = , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if , = , = = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if , = , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if , = , = , , , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if , = , = , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if , = , = , , , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "+ , if , = , = , , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "  =",
   "+ , = = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "  =",
   "+ , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "  =",
   "+ , = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "  =",
   "+ , = = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "  =",
   "+ , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "  =",
   "+ , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "  =",
   "+ , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "  =",
   "+ , = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "  =",
   "+ , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "  =",
   "+ , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "  =",
   "+ , = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "  =",
   "+ , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "  =",
   "+ , = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "  =",
   "+ , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "  =",
   "+ , = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "  =",
   "+ , = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- . )",
   "  =",
   "+ , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- = . . , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- = . . , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- = . . , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- = . . , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- = . . , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- = . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- = . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- = . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- = , = , ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ",",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- = , = ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- = , = )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- = , = )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- = , = )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- = , = )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- , = , ) ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- , = , )",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- , = , )",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- , = , )",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  (",
   "- , = , )",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  ( =",
   "+ , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  ( =",
   "+ , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  ( =",
   "+ , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  ( =",
   "+ , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  ( =",
   "+ , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  ( =",
   "+ , = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "- .",
   "  ( =",
   "+ , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = .",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = .",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . ( =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . ( =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . ( =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . ( =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . ( =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . ( =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . ( =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . ( = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . ( = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . ( = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . ( = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . ( = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . ( = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  = ) : = . ( = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  =",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , if",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , None",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "+ , , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = .",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = .",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = . (",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = . (",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ] ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , if",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , None",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "+ , , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = .",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = .",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = . (",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = . (",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , if",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , None",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ if",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) )",
   "+ None",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) ) =",
   "+ if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) ) =",
   "+ if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) ) =",
   "+ if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) ) =",
   "+ if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) ) =",
   "+ if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) ) =",
   "+ if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ) ) =",
   "+ if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   ")",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if , = , = = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if , = , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if , = , = = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if , = , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if , = , = , , , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if , = , = , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if , = , = , , , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , if , = , = , , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , = = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , = = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . .",
   "  =",
   "+ , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   ".",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if , = , = = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if , = , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if , = , = = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if , = , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if , = , = , , , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if , = , = , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if , = , = , , , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , if , = , = , , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , = = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , = = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- . (",
   "  =",
   "+ , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ".",
   "(",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- ) = . . , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- ) = . . , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- ) = . . , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- ) = . . , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- ) = . . , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   ".",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- ) = . ( , = ,",
   "  =",
   "+ , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- ) = . ( , = ,",
   "  =",
   "+ , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- ) = . ( , = ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- ) = . ( , = ,",
   "  =",
   "+ , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- ) = . ( , = ,",
   "  =",
   "+ , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- ) , = , ,",
   "  =",
   "+ , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ",",
   "=",
   ",",
   ",",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if , = , = = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if , = , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if , = , = = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if , = , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if , = , = , , , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if , = , = , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if , = , = , , , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "+ , if , = , = , , , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "  =",
   "+ , = = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "  =",
   "+ , = = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "  =",
   "+ , = = , , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "  =",
   "+ , = = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "  =",
   "+ , = , = , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "  =",
   "+ , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "  =",
   "+ , = , = , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "  =",
   "+ , = , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "  =",
   "+ , = , = , = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "  =",
   "+ , = , = , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "  =",
   "+ , = , = , , = = , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "  =",
   "+ , = , = , , = = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "  =",
   "+ , = , = , , = , = = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "  =",
   "+ , = , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "  =",
   "+ , = , = , , = , = , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "  =",
   "+ , = , = , , = , , = , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "- )",
   "  =",
   "+ , = , = , , = , , , = , = , =",
   "  ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , if",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , None",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , = , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , = , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , = , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , = , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , = , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , = , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , = , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , = , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = (",
   "+ , , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  =",
   "- )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  =",
   "- )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = [ ] , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = [ ] , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = [ ] ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = [ ] ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = [ ]",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "[",
   "]",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = [ . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "[",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = [ . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "[",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = ( , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = ( ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = ( ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = ( )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- = (",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "(",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ = ,",
   "  )",
   "- =",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   "=",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = = .",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = = . =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = = . =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = = . =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = = . =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = = . =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = = . =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = = . =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = [ ] , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = [ ] , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = [ ] ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = [ ] ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = [ ] )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = [ ]",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = [ . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = [ . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = ( , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = ( ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = ( ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = ( )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- = (",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  = )",
   "- =",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = .",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = .",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . ( =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . ( =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . ( =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . ( =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . ( =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . ( =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . ( =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . ( = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . ( = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . ( = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . ( = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . ( = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . ( = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ =",
   "  ) : = . ( = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = [ ] , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = [ ] , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = [ ] ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = [ ] ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = [ ] )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = [ ] )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = [ ]",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   "]",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = [ . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = [ . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "[",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = ( , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = ( ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = ( ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = ( )",
   "  = . (",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- = (",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "(",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = )",
   "- =",
   "  = . .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   ".",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = .",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = .",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . ( =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . ( =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . ( =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . ( =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . ( =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . ( =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . ( =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . ( = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . ( = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . ( = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . ( = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . ( = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . ( = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  = ) : = . ( = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = .",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = .",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . ( =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . ( =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . ( =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . ( =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . ( =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . ( =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . ( =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . ( = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . ( = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . ( = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . ( = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . ( = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . ( = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ,",
   "+ ,",
   "  ) : = . ( = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   ")",
   ":",
   "=",
   ".",
   "(",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , if",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , None",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "+ , , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , = , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , = , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = .",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = .",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = .",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = .",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = .",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = . (",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = . (",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = . (",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "- )",
   "  : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , if",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , None",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( , =",
   "+ , , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ",",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , if",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , None",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "+ , , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = .",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = .",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = . (",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = . (",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] )",
   "  : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] ( )",
   "  = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ] ( )",
   "  = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "(",
   ")",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , if",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , None",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- [ ]",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "[",
   "]",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , if",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , None",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "+ , , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : =",
   "+ , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = .",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = .",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = .",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = .",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = .",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = . (",
   "+ , = False , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = . (",
   "+ , = False , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = . (",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = . (",
   "+ , = , =",
   "  ) = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- ( )",
   "  : = . (",
   "+ , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ")",
   ":",
   "=",
   ".",
   "(",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , if",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  = . ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , None",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "- (",
   "  =",
   "+ , , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ if",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( )",
   "+ None",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ if",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) )",
   "+ None",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) ) =",
   "+ if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) ) =",
   "+ if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) ) =",
   "+ if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) ) =",
   "+ if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) ) =",
   "+ if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) ) =",
   "+ if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ) ) =",
   "+ if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   ")",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , if",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , None",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , = , =",
   "  )",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , = , =",
   "  )",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , = , =",
   "  )",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , = , =",
   "  )",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , = , =",
   "  )",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , = , =",
   "  )",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , = , =",
   "  )",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , = , =",
   "  )",
   "- ,",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   ",",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , = , =",
   "  )",
   "- ,",
   "  = . (",
   "- ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   ",",
   "=",
   ".",
   "(",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( (",
   "+ , , =",
   "  ) = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ if",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  =",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  =",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  =",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  =",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  =",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  =",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  =",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  = .",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  = .",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  = .",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  = .",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  = .",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  = .",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  = .",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  = .",
   "- ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  = . (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  = . (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  = . (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  = . (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  = . (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  = . (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( )",
   "+ None",
   "  = . (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   ".",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( ) =",
   "+ if",
   "  (",
   "- = . ( [ ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "(",
   "=",
   ".",
   "(",
   "[",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( ) =",
   "+ if",
   "  (",
   "- = . ( [ ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "(",
   "=",
   ".",
   "(",
   "[",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( ) =",
   "+ if",
   "  (",
   "- = ( = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "(",
   "=",
   "(",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( ) =",
   "+ if",
   "  (",
   "- = ( . ]",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "(",
   "=",
   "(",
   ".",
   "]",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( ) =",
   "+ if",
   "  (",
   "- = ( . ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "(",
   "=",
   "(",
   ".",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( ) =",
   "+ if",
   "  (",
   "- = ( , , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "(",
   "=",
   "(",
   ",",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 },
 {
  "count": 2,
  "code": [
   "  = ( ( ) =",
   "+ if",
   "  (",
   "- , = , ) ,",
   "  ) ) ) )"
  ],
  "trigger": [
   "=",
   "(",
   "(",
   ")",
   "=",
   "(",
   ",",
   "=",
   ",",
   ")",
   ",",
   ")",
   ")",
   ")",
   ")"
  ]
 }
]