[
{
  "number": 6,
  "changes_set": [
   "  ublic",
   "  boolean",
   "  equals",
   "  (",
   "  Object",
   "  obj",
   "  )",
   "  {",
   "  f",
   "  (",
   "  !",
   "  (",
   "  obj",
   "  instanceof",
   "  ShapeList",
   "  )",
   "  )",
   "  {",
   "  eturn",
   "  false",
   "  ;",
   "- ShapeList",
   "- that",
   "- =",
   "+ return",
   "+ super",
   "+ .",
   "+ equals",
   "  (",
   "- ShapeList",
   "+ obj",
   "  )",
   "- obj",
   "  ;",
   "  ShapeList",
   "  that",
   "  =",
   "  (",
   "  ShapeList",
   "  )",
   "  obj",
   "  ;",
   "  int",
   "  listSize",
   "  =",
   "  size",
   "  (",
   "  )",
   "  ;",
   "- int",
   "- listSize",
   "- =",
   "- size",
   "- (",
   "- )",
   "- ;",
   "- for",
   "- (",
   "- int",
   "- i",
   "- =",
   "- 0",
   "- ;",
   "- i",
   "- <",
   "- listSize",
   "- ;",
   "- i",
   "- ++",
   "- )",
   "- {",
   "  for",
   "  (",
   "  int",
   "  i",
   "  =",
   "  0",
   "  ;",
   "  i",
   "  <",
   "  listSize",
   "  ;",
   "  i",
   "  ++",
   "  )",
   "  {",
   "  if",
   "  (",
   "  !",
   "  ShapeUtilities",
   "  .",
   "  equal",
   "  (",
   "  (",
   "  Shape",
   "  )",
   "  get",
   "  (",
   "  i",
   "  )",
   "  ,",
   "  (",
   "  Shape",
   "  )",
   "  that",
   "  .",
   "  get",
   "  (",
   "  i",
   "  )",
   "  )",
   "  )",
   "  {",
   "- if",
   "- (",
   "- !",
   "- ShapeUtilities",
   "- .",
   "- equal",
   "- (",
   "- (",
   "- Shape",
   "- )",
   "- get",
   "- (",
   "- i",
   "- )",
   "- ,",
   "- (",
   "- Shape",
   "- )",
   "- that",
   "- .",
   "- get",
   "- (",
   "- i",
   "- )",
   "- )",
   "- )",
   "- {",
   "- return",
   "- false",
   "- ;",
   "  return",
   "  false",
   "  ;",
   "  }",
   "  }",
   "- }",
   "- }",
   "  return",
   "  true",
   "  ;",
   "- return",
   "- true",
   "- ;"
  ]
 },
 {
  "number": 10,
  "changes_set": [
   "  eturn",
   "  The",
   "  formatted",
   "  HTML",
   "  area",
   "  tag",
   "  attribute",
   "  (",
   "  s",
   "  )",
   "  .",
   "  /",
   "  ublic",
   "  String",
   "  generateToolTipFragment",
   "  (",
   "  String",
   "  toolTipText",
   "  )",
   "  {",
   "  return",
   "  \" title=\\\"\"",
   "  +",
   "- ImageMapUtilities",
   "- .",
   "- htmlEscape",
   "- (",
   "- toolTipText",
   "+ toolTipTextreturn",
   "- )",
   "- return",
   "  \" title=\\\"\"",
   "  +",
   "  ImageMapUtilities",
   "  .",
   "  htmlEscape",
   "  (",
   "  toolTipText",
   "  )",
   "  \"\\\" alt=\\\"\\\"\"",
   "  ;",
   "- \"\\\" alt=\\\"\\\"\"",
   "- ;"
  ]
 },
 {
  "number": 8,
  "changes_set": [
   "  ublic",
   "  Week",
   "  (",
   "  Date",
   "  time",
   "  )",
   "  {",
   "  /",
   "  ublic",
   "  Week",
   "  (",
   "  Date",
   "  time",
   "  ,",
   "  TimeZone",
   "  zone",
   "  )",
   "  {",
   "  /",
   "  defer",
   "  argument",
   "  checking",
   "  ...",
   "  this",
   "  (",
   "  time",
   "  ,",
   "- zone",
   "+ RegularTimePeriod",
   "+ .",
   "+ DEFAULT_TIME_ZONE",
   "  ,",
   "  Locale",
   "  .",
   "  getDefault",
   "  (",
   "  )",
   "  )",
   "  ;",
   "  this",
   "  (",
   "  time",
   "  ,",
   "  zone",
   "  ,",
   "  Locale",
   "  .",
   "  getDefault",
   "  (",
   "  )",
   "  )",
   "  ;",
   "  *",
   "  *"
  ]
 },
 {
  "number": 7,
  "changes_set": [
   "  rivate",
   "  void",
   "  updateBounds",
   "  (",
   "  TimePeriod",
   "  period",
   "  ,",
   "  int",
   "  index",
   "  )",
   "  {",
   "  f",
   "  (",
   "  this",
   "  .",
   "  maxMiddleIndex",
   "  >=",
   "  0",
   "  )",
   "  {",
   "  long",
   "  s",
   "  =",
   "  getDataItem",
   "  (",
   "  this",
   "  .",
   "- maxMiddleIndex",
   "+ minMiddleIndex",
   "  )",
   "  .",
   "  getPeriod",
   "  (",
   "  )",
   "  .",
   "  getStart",
   "  (",
   "  )",
   "  long",
   "  s",
   "  =",
   "  getDataItem",
   "  (",
   "  this",
   "  .",
   "  maxMiddleIndex",
   "  )",
   "  .",
   "  getPeriod",
   "  (",
   "  )",
   "  .",
   "  getStart",
   "  (",
   "  )",
   "  getTime",
   "  (",
   "  )",
   "  ;",
   "  long",
   "  e",
   "  =",
   "  getDataItem",
   "  (",
   "  this",
   "  .",
   "- maxMiddleIndex",
   "+ minMiddleIndex",
   "  )",
   "  .",
   "  getPeriod",
   "  (",
   "  )",
   "  .",
   "  getEnd",
   "  (",
   "  )",
   "  long",
   "  e",
   "  =",
   "  getDataItem",
   "  (",
   "  this",
   "  .",
   "  maxMiddleIndex",
   "  )",
   "  .",
   "  getPeriod",
   "  (",
   "  )",
   "  .",
   "  getEnd",
   "  (",
   "  )",
   "  getTime",
   "  (",
   "  )",
   "  ;",
   "  ong",
   "  maxMiddle",
   "  =",
   "  s",
   "  +",
   "  (",
   "  e",
   "  -",
   "  s",
   "  )",
   "  /",
   "  2",
   "  ;",
   "  f",
   "  (",
   "  middle",
   "  >",
   "  maxMiddle",
   "  )",
   "  {"
  ]
 },
 {
  "number": 5,
  "changes_set": [
   "  ublic",
   "  XYDataItem",
   "  addOrUpdate",
   "  (",
   "  Number",
   "  x",
   "  ,",
   "  Number",
   "  y",
   "  )",
   "  {",
   "  f",
   "  (",
   "  x",
   "  ==",
   "  null",
   "  )",
   "  {",
   "  hrow",
   "  new",
   "  IllegalArgumentException",
   "  (",
   "  \"Null 'x' argument.\"",
   "  )",
   "  ;",
   "  if",
   "  (",
   "  this",
   "  .",
   "  allowDuplicateXValues",
   "  )",
   "  {",
   "- if",
   "- (",
   "- this",
   "- .",
   "- allowDuplicateXValues",
   "- )",
   "- {",
   "- add",
   "- (",
   "- x",
   "- ,",
   "- y",
   "- )",
   "- ;",
   "  add",
   "  (",
   "  x",
   "  ,",
   "  y",
   "  )",
   "  ;",
   "  return",
   "  null",
   "  ;",
   "- return",
   "- null",
   "- ;",
   "- }",
   "  }",
   "  /",
   "  if",
   "  we",
   "  get",
   "  to",
   "  here",
   "  ,",
   "  we",
   "  know",
   "  that",
   "  duplicate",
   "  X",
   "  values",
   "  are",
   "  not",
   "  permittedYDataItem",
   "  overwritten",
   "  =",
   "  null",
   "  ;",
   "  nt",
   "  index",
   "  =",
   "  indexOf",
   "  (",
   "  x",
   "  )",
   "  ;",
   "  if",
   "  (",
   "  index",
   "  >=",
   "  0",
   "+ &&",
   "+ !",
   "+ this",
   "+ .",
   "+ allowDuplicateXValues",
   "  )",
   "  {",
   "  if",
   "  (",
   "  index",
   "  >=",
   "  0",
   "  )",
   "  {",
   "  YDataItem",
   "  existing",
   "  =",
   "  (",
   "  XYDataItem",
   "  )",
   "  this",
   "  .",
   "  data",
   "  .",
   "  get",
   "  (",
   "  index",
   "  )",
   "  ;",
   "  ry",
   "  {",
   "  verwritten",
   "  =",
   "  (",
   "  XYDataItem",
   "  )",
   "  existing",
   "  .",
   "  clone",
   "  (",
   "  )",
   "  ;"
  ]
 },
 {
  "number": 3,
  "changes_set": [
   "  ublic",
   "  TimeSeries",
   "  createCopy",
   "  (",
   "  int",
   "  start",
   "  ,",
   "  int",
   "  end",
   "  )",
   "  hrow",
   "  new",
   "  IllegalArgumentException",
   "  (",
   "  \"Requires start <= end.\"",
   "  )",
   "  ;",
   "  imeSeries",
   "  copy",
   "  =",
   "  (",
   "  TimeSeries",
   "  )",
   "  super",
   "  .",
   "  clone",
   "  (",
   "  )",
   "  ;",
   "  copy",
   "  .",
   "  minY",
   "- =",
   "- Double",
   "- .",
   "- NaN",
   "- ;",
   "- copy",
   "- .",
   "- minY",
   "- =",
   "- Double",
   "- .",
   "- NaN",
   "- ;",
   "- copy",
   "- .",
   "- maxY",
   "  =",
   "  Double",
   "  .",
   "  NaN",
   "  ;",
   "  copy",
   "  .",
   "  maxY",
   "  =",
   "  Double",
   "  .",
   "  NaN",
   "  ;",
   "  opy",
   "  .",
   "  data",
   "  =",
   "  new",
   "  java",
   "  .",
   "  util",
   "  .",
   "  ArrayList",
   "  (",
   "  )",
   "  ;",
   "  f",
   "  (",
   "  this",
   "  .",
   "  data",
   "  .",
   "  size",
   "  (",
   "  )",
   "  >",
   "  0",
   "  )",
   "  {",
   "  or",
   "  (",
   "  int",
   "  index",
   "  =",
   "  start",
   "  ;",
   "  index",
   "  <=",
   "  end",
   "  ;",
   "  index",
   "  ++",
   "  )",
   "  {"
  ]
 },
 {
  "number": 4,
  "changes_set": [
   "  ublic",
   "  Range",
   "  getDataRange",
   "  (",
   "  ValueAxis",
   "  axis",
   "- )",
   "- {",
   "- if",
   "- (",
   "- r",
   "- !=",
   "- null",
   "  )",
   "  {",
   "  if",
   "  (",
   "  r",
   "  !=",
   "  null",
   "  )",
   "  {",
   "  ollection",
   "  c",
   "  =",
   "  r",
   "  .",
   "  getAnnotations",
   "  (",
   "  )",
   "  ;",
   "  terator",
   "  i",
   "  =",
   "  c",
   "  .",
   "  iterator",
   "  (",
   "  )",
   "  ;",
   "  hile",
   "  (",
   "  i",
   "  .",
   "  hasNext",
   "  (",
   "  )",
   "  )",
   "  {"
  ]
 },
 {
  "number": 4,
  "changes_set": [
   "  ublic",
   "  Range",
   "  getDataRange",
   "  (",
   "  ValueAxis",
   "  axis",
   "  )",
   "  {",
   "  ncludedAnnotations",
   "  .",
   "  add",
   "  (",
   "  a",
   "  )",
   "  ;",
   "  }",
   "- }"
  ]
 },
 {
  "number": 2,
  "changes_set": [
   "  ublic",
   "  static",
   "  Range",
   "  iterateDomainBounds",
   "  (",
   "  XYDataset",
   "  dataset",
   "  ,",
   "  or",
   "  (",
   "  int",
   "  series",
   "  =",
   "  0",
   "  ;",
   "  series",
   "  <",
   "  seriesCount",
   "  ;",
   "  series",
   "  ++",
   "  )",
   "  {",
   "  nt",
   "  itemCount",
   "  =",
   "  dataset",
   "  .",
   "  getItemCount",
   "  (",
   "  series",
   "  )",
   "  ;",
   "  or",
   "  (",
   "  int",
   "  item",
   "  =",
   "  0",
   "  ;",
   "  item",
   "  <",
   "  itemCount",
   "  ;",
   "  item",
   "  ++",
   "  )",
   "  {",
   "  double",
   "  value",
   "  =",
   "  intervalXYData",
   "  .",
   "  getXValue",
   "  (",
   "  series",
   "  ,",
   "  item",
   "  )",
   "  ;",
   "- double",
   "- value",
   "- =",
   "- intervalXYData",
   "- .",
   "- getXValue",
   "- (",
   "- series",
   "- ,",
   "- item",
   "- )",
   "- ;",
   "  value",
   "  =",
   "  intervalXYData",
   "  .",
   "  getStartXValue",
   "  (",
   "  series",
   "  ,",
   "  item",
   "  )",
   "  ;",
   "  value",
   "  =",
   "  intervalXYData",
   "  .",
   "  getEndXValue",
   "  (",
   "  series",
   "  ,",
   "  item",
   "  )",
   "  ;",
   "  if",
   "  (",
   "  !",
   "  Double",
   "  .",
   "  isNaN",
   "  (",
   "  value",
   "  )",
   "  )",
   "  {",
   "- if",
   "- (",
   "- !",
   "- Double",
   "- .",
   "- isNaN",
   "- (",
   "- value",
   "- )",
   "- )",
   "- {",
   "- minimum",
   "- =",
   "- Math",
   "- .",
   "- min",
   "- (",
   "- minimum",
   "- ,",
   "- value",
   "- )",
   "- ;",
   "  minimum",
   "  =",
   "  Math",
   "  .",
   "  min",
   "  (",
   "  minimum",
   "  ,",
   "  value",
   "  )",
   "  ;",
   "  maximum",
   "  =",
   "  Math",
   "  .",
   "  max",
   "  (",
   "  maximum",
   "  ,",
   "  value",
   "  )",
   "  ;",
   "- maximum",
   "- =",
   "- Math",
   "- .",
   "- max",
   "- (",
   "- maximum",
   "- ,",
   "- value",
   "- )",
   "- ;",
   "- }",
   "  }",
   "  f",
   "  (",
   "  !",
   "  Double",
   "  .",
   "  isNaN",
   "  (",
   "  lvalue",
   "  )",
   "  )",
   "  {",
   "  inimum",
   "  =",
   "  Math",
   "  .",
   "  min",
   "  (",
   "  minimum",
   "- ,",
   "- lvalue",
   "- )",
   "- ;",
   "- maximum",
   "- =",
   "- Math",
   "- .",
   "- max",
   "- (",
   "- maximum",
   "  ,",
   "  lvalue",
   "  )",
   "  ;",
   "  maximum",
   "  =",
   "  Math",
   "  .",
   "  max",
   "  (",
   "  maximum",
   "  ,",
   "  lvalue",
   "  )",
   "  ;",
   "  f",
   "  (",
   "  !",
   "  Double",
   "  .",
   "  isNaN",
   "  (",
   "  uvalue",
   "  )",
   "  )",
   "  {",
   "  minimum",
   "  =",
   "  Math",
   "  .",
   "  min",
   "  (",
   "  minimum",
   "  ,",
   "  uvalue",
   "  )",
   "  ;",
   "- minimum",
   "- =",
   "- Math",
   "- .",
   "- min",
   "- (",
   "- minimum",
   "- ,",
   "- uvalue",
   "- )",
   "- ;",
   "  aximum",
   "  =",
   "  Math",
   "  .",
   "  max",
   "  (",
   "  maximum",
   "  ,",
   "  uvalue",
   "  )",
   "  ;"
  ]
 },
 {
  "number": 2,
  "changes_set": [
   "  ublic",
   "  static",
   "  Range",
   "  iterateRangeBounds",
   "  (",
   "  XYDataset",
   "  dataset",
   "  ,",
   "  or",
   "  (",
   "  int",
   "  series",
   "  =",
   "  0",
   "  ;",
   "  series",
   "  <",
   "  seriesCount",
   "  ;",
   "  series",
   "  ++",
   "  )",
   "  {",
   "  nt",
   "  itemCount",
   "  =",
   "  dataset",
   "  .",
   "  getItemCount",
   "  (",
   "  series",
   "  )",
   "  ;",
   "  or",
   "  (",
   "  int",
   "  item",
   "  =",
   "  0",
   "  ;",
   "  item",
   "  <",
   "  itemCount",
   "  ;",
   "  item",
   "  ++",
   "  )",
   "  {",
   "  double",
   "  value",
   "  =",
   "  ixyd",
   "  .",
   "  getYValue",
   "  (",
   "  series",
   "  ,",
   "  item",
   "  )",
   "  ;",
   "- double",
   "- value",
   "- =",
   "- ixyd",
   "- .",
   "- getYValue",
   "- (",
   "- series",
   "- ,",
   "- item",
   "- )",
   "- ;",
   "  ouble",
   "  lvalue",
   "  =",
   "  ixyd",
   "  .",
   "  getStartYValue",
   "  (",
   "  series",
   "  ,",
   "  item",
   "  )",
   "  ;",
   "  ouble",
   "  uvalue",
   "  =",
   "  ixyd",
   "  .",
   "  getEndYValue",
   "  (",
   "  series",
   "  ,",
   "  item",
   "  )",
   "  ;",
   "  if",
   "  (",
   "  !",
   "  Double",
   "  .",
   "  isNaN",
   "  (",
   "  value",
   "  )",
   "  )",
   "  {",
   "- if",
   "- (",
   "- !",
   "- Double",
   "- .",
   "- isNaN",
   "- (",
   "- value",
   "- )",
   "- )",
   "- {",
   "- minimum",
   "- =",
   "- Math",
   "- .",
   "- min",
   "- (",
   "- minimum",
   "- ,",
   "- value",
   "- )",
   "- ;",
   "  minimum",
   "  =",
   "  Math",
   "  .",
   "  min",
   "  (",
   "  minimum",
   "  ,",
   "  value",
   "  )",
   "  ;",
   "  maximum",
   "  =",
   "  Math",
   "  .",
   "  max",
   "  (",
   "  maximum",
   "  ,",
   "  value",
   "  )",
   "  ;",
   "- maximum",
   "- =",
   "- Math",
   "- .",
   "- max",
   "- (",
   "- maximum",
   "- ,",
   "- value",
   "- )",
   "- ;",
   "- }",
   "  }",
   "  f",
   "  (",
   "  !",
   "  Double",
   "  .",
   "  isNaN",
   "  (",
   "  lvalue",
   "  )",
   "  )",
   "  {",
   "  inimum",
   "  =",
   "  Math",
   "  .",
   "  min",
   "  (",
   "  minimum",
   "- ,",
   "- lvalue",
   "- )",
   "- ;",
   "- maximum",
   "- =",
   "- Math",
   "- .",
   "- max",
   "- (",
   "- maximum",
   "  ,",
   "  lvalue",
   "  )",
   "  ;",
   "  maximum",
   "  =",
   "  Math",
   "  .",
   "  max",
   "  (",
   "  maximum",
   "  ,",
   "  lvalue",
   "  )",
   "  ;",
   "  f",
   "  (",
   "  !",
   "  Double",
   "  .",
   "  isNaN",
   "  (",
   "  uvalue",
   "  )",
   "  )",
   "  {",
   "  minimum",
   "  =",
   "  Math",
   "  .",
   "  min",
   "  (",
   "  minimum",
   "  ,",
   "  uvalue",
   "  )",
   "  ;",
   "- minimum",
   "- =",
   "- Math",
   "- .",
   "- min",
   "- (",
   "- minimum",
   "- ,",
   "- uvalue",
   "- )",
   "- ;",
   "  aximum",
   "  =",
   "  Math",
   "  .",
   "  max",
   "  (",
   "  maximum",
   "  ,",
   "  uvalue",
   "  )",
   "  ;"
  ]
 },
 {
  "number": 1,
  "changes_set": [
   "  ublic",
   "  LegendItemCollection",
   "  getLegendItems",
   "  (",
   "  )",
   "  {",
   "  nt",
   "  index",
   "  =",
   "  this",
   "  .",
   "  plot",
   "  .",
   "  getIndexOf",
   "  (",
   "  this",
   "  )",
   "  ;",
   "  ategoryDataset",
   "  dataset",
   "  =",
   "  this",
   "  .",
   "  plot",
   "  .",
   "  getDataset",
   "  (",
   "  index",
   "  )",
   "  ;",
   "  if",
   "  (",
   "  dataset",
   "- ==",
   "+ !=",
   "  null",
   "  )",
   "  {",
   "  if",
   "  (",
   "  dataset",
   "  ==",
   "  null",
   "  )",
   "  {",
   "  eturn",
   "  result",
   "  ;",
   "  nt",
   "  seriesCount",
   "  =",
   "  dataset",
   "  .",
   "  getRowCount",
   "  (",
   "  )",
   "  ;"
  ]
 },
 {
  "number": 12,
  "changes_set": [
   "  ublic",
   "  MultiplePiePlot",
   "  (",
   "  )",
   "  {",
   "  /",
   "  ublic",
   "  MultiplePiePlot",
   "  (",
   "  CategoryDataset",
   "  dataset",
   "  )",
   "  {",
   "  uper",
   "  (",
   "  )",
   "  ;",
   "- setDataset",
   "- (",
   "+ this",
   "+ .",
   "  dataset",
   "- )",
   "+ =",
   "+ dataset",
   "  ;",
   "  setDataset",
   "  (",
   "  dataset",
   "  )",
   "  ;",
   "  iePlot",
   "  piePlot",
   "  =",
   "  new",
   "  PiePlot",
   "  (",
   "  null",
   "  )",
   "  ;",
   "  his",
   "  .",
   "  pieChart",
   "  =",
   "  new",
   "  JFreeChart",
   "  (",
   "  piePlot",
   "  )",
   "  ;",
   "  his",
   "  .",
   "  pieChart",
   "  .",
   "  removeLegend",
   "  (",
   "  )",
   "  ;"
  ]
 },
 {
  "number": 11,
  "changes_set": [
   "  ublic",
   "  static",
   "  boolean",
   "  equal",
   "  (",
   "  GeneralPath",
   "  p1",
   "  ,",
   "  GeneralPath",
   "  p2",
   "  )",
   "  {",
   "  eturn",
   "  false",
   "  ;",
   "  athIterator",
   "  iterator1",
   "  =",
   "  p1",
   "  .",
   "  getPathIterator",
   "  (",
   "  null",
   "  )",
   "  ;",
   "  PathIterator",
   "  iterator2",
   "  =",
   "- p2",
   "+ p1",
   "  .",
   "  getPathIterator",
   "  (",
   "  null",
   "  )",
   "  ;",
   "  PathIterator",
   "  iterator2",
   "  =",
   "  p2",
   "  .",
   "  getPathIterator",
   "  (",
   "  null",
   "  )",
   "  ;",
   "  ouble",
   "  [",
   "  ]",
   "  d1",
   "  =",
   "  new",
   "  double",
   "  [",
   "  6",
   "  ]",
   "  ;",
   "  ouble",
   "  [",
   "  ]",
   "  d2",
   "  =",
   "  new",
   "  double",
   "  [",
   "  6",
   "  ]",
   "  ;",
   "  oolean",
   "  done",
   "  =",
   "  iterator1",
   "  .",
   "  isDone",
   "  (",
   "  )",
   "  &&",
   "  iterator2",
   "  .",
   "  isDone",
   "  (",
   "  )",
   "  ;"
  ]
 },
 {
  "number": 13,
  "changes_set": [
   "  rotected",
   "  Size2D",
   "  arrangeFF",
   "  (",
   "  BlockContainer",
   "  container",
   "  ,",
   "  Graphics2D",
   "  g2",
   "  ,",
   "  [",
   "  3",
   "  ]",
   "  =",
   "  h",
   "  [",
   "  2",
   "  ]",
   "  ;",
   "  f",
   "  (",
   "  this",
   "  .",
   "  rightBlock",
   "  !=",
   "  null",
   "  )",
   "  {",
   "  ectangleConstraint",
   "  c4",
   "  =",
   "  new",
   "  RectangleConstraint",
   "  (",
   "  0.0",
   "  ,",
   "  new",
   "  Range",
   "  (",
   "  0.0",
   "  ,",
   "- Math",
   "- .",
   "- max",
   "- (",
   "  constraint",
   "  .",
   "  getWidth",
   "  (",
   "  )",
   "  -",
   "  w",
   "  [",
   "  2",
   "  ]",
   "- ,",
   "- 0.0",
   "- )",
   "  )",
   "  ,",
   "  new",
   "  Range",
   "  (",
   "  0.0",
   "  ,",
   "  Math",
   "  .",
   "  max",
   "  (",
   "  constraint",
   "  .",
   "  getWidth",
   "  (",
   "  )",
   "  -",
   "  w",
   "  [",
   "  2",
   "  ]",
   "  ,",
   "  0.0",
   "  )",
   "  )",
   "  ,",
   "  engthConstraintType",
   "  .",
   "  RANGE",
   "  ,",
   "  h",
   "  [",
   "  2",
   "  ]",
   "  ,",
   "  null",
   "  ,",
   "  engthConstraintType",
   "  .",
   "  FIXED",
   "  )",
   "  ;",
   "  ize2D",
   "  size",
   "  =",
   "  this",
   "  .",
   "  rightBlock",
   "  .",
   "  arrange",
   "  (",
   "  g2",
   "  ,",
   "  c4",
   "  )",
   "  ;"
  ]
 },
 {
  "number": 18,
  "changes_set": [
   "  rivate",
   "  void",
   "  rebuildIndex",
   "  (",
   "  )",
   "  {",
   "  ublic",
   "  void",
   "  removeValue",
   "  (",
   "  int",
   "  index",
   "  )",
   "  {",
   "  his",
   "  .",
   "  keys",
   "  .",
   "  remove",
   "  (",
   "  index",
   "  )",
   "  ;",
   "  his",
   "  .",
   "  values",
   "  .",
   "  remove",
   "  (",
   "  index",
   "  )",
   "  ;",
   "+ if",
   "+ (",
   "+ index",
   "+ <",
   "+ this",
   "+ .",
   "+ keys",
   "+ .",
   "+ size",
   "+ (",
   "+ )",
   "+ )",
   "+ {",
   "  ebuildIndex",
   "  (",
   "  )",
   "  ;",
   "+ }",
   "  *",
   "  *",
   "  Removes",
   "  a",
   "  value",
   "  from",
   "  the",
   "  collection",
   "  ."
  ]
 },
 {
  "number": 18,
  "changes_set": [
   "  hrows",
   "  UnknownKeyException",
   "  if",
   "  <",
   "  code",
   "  >",
   "  key",
   "  <",
   "  /",
   "  code",
   "  >",
   "  is",
   "  not",
   "  recognised",
   "  .",
   "  /",
   "  ublic",
   "  void",
   "  removeValue",
   "  (",
   "  Comparable",
   "  key",
   "  )",
   "  {",
   "  nt",
   "  index",
   "  =",
   "  getIndex",
   "  (",
   "  key",
   "  )",
   "  ;",
   "  f",
   "  (",
   "  index",
   "  <",
   "  0",
   "  )",
   "  {",
   "+ return",
   "+ ;",
   "  throw",
   "  new",
   "  UnknownKeyException",
   "  (",
   "  \"The key (\"",
   "  +",
   "- keythrow",
   "- new",
   "- UnknownKeyException",
   "- (",
   "- \"The key (\"",
   "- +",
   "  key",
   "- +",
   "- \") is not recognised.\"",
   "- )",
   "- ;",
   "  +",
   "  \") is not recognised.\"",
   "  )",
   "  ;",
   "  emoveValue",
   "  (",
   "  index",
   "  )",
   "  ;",
   "  *",
   "  *",
   "  Clears",
   "  all",
   "  values",
   "  from",
   "  the",
   "  collection",
   "  ."
  ]
 },
 {
  "number": 18,
  "changes_set": [
   "  ublic",
   "  void",
   "  removeColumn",
   "  (",
   "  int",
   "  columnIndex",
   "  )",
   "  {",
   "  ublic",
   "  void",
   "  removeColumn",
   "  (",
   "  Comparable",
   "  columnKey",
   "  )",
   "  {",
   "  if",
   "  (",
   "  columnKey",
   "  ==",
   "  null",
   "  )",
   "  {",
   "- if",
   "- (",
   "- columnKey",
   "- ==",
   "- null",
   "- )",
   "- {",
   "- throw",
   "- new",
   "- IllegalArgumentException",
   "- (",
   "- \"Null 'columnKey' argument.\"",
   "- )",
   "- ;",
   "  throw",
   "  new",
   "  IllegalArgumentException",
   "  (",
   "  \"Null 'columnKey' argument.\"",
   "  )",
   "  ;",
   "  }",
   "- }",
   "- if",
   "- (",
   "- !",
   "- this",
   "- .",
   "- columnKeys",
   "- .",
   "- contains",
   "- (",
   "- columnKey",
   "- )",
   "- )",
   "- {",
   "  if",
   "  (",
   "  !",
   "  this",
   "  .",
   "  columnKeys",
   "  .",
   "  contains",
   "  (",
   "  columnKey",
   "  )",
   "  )",
   "  {",
   "  throw",
   "  new",
   "  UnknownKeyException",
   "  (",
   "  \"Unknown key: \"",
   "  +",
   "  columnKey",
   "  )",
   "  ;",
   "- throw",
   "- new",
   "- UnknownKeyException",
   "- (",
   "- \"Unknown key: \"",
   "- +",
   "- columnKey",
   "- )",
   "- ;",
   "- }",
   "  }",
   "  terator",
   "  iterator",
   "  =",
   "  this",
   "  .",
   "  rows",
   "  .",
   "  iterator",
   "  (",
   "  )",
   "  ;",
   "  hile",
   "  (",
   "  iterator",
   "  .",
   "  hasNext",
   "  (",
   "  )",
   "  )",
   "  {",
   "  efaultKeyedValues",
   "  rowData",
   "  =",
   "  (",
   "  DefaultKeyedValues",
   "  )",
   "  iterator",
   "  .",
   "  next",
   "  (",
   "  )",
   "  ;",
   "  int",
   "  index",
   "  =",
   "  rowData",
   "  .",
   "  getIndex",
   "  (",
   "  columnKey",
   "  )",
   "  ;",
   "- int",
   "- index",
   "- =",
   "- rowData",
   "- .",
   "- getIndex",
   "- (",
   "- columnKey",
   "- )",
   "- ;",
   "- if",
   "- (",
   "- index",
   "- >=",
   "- 0",
   "- )",
   "- {",
   "  if",
   "  (",
   "  index",
   "  >=",
   "  0",
   "  )",
   "  {",
   "  owData",
   "  .",
   "  removeValue",
   "  (",
   "  columnKey",
   "  )",
   "  ;",
   "- }",
   "  }",
   "  his",
   "  .",
   "  columnKeys",
   "  .",
   "  remove",
   "  (",
   "  columnKey",
   "  )",
   "  ;",
   "  *",
   "  *",
   "  Clears",
   "  all",
   "  the",
   "  data",
   "  and",
   "  associated",
   "  keys",
   "  .",
   "  /"
  ]
 },
 {
  "number": 14,
  "changes_set": [
   "  ublic",
   "  boolean",
   "  removeDomainMarker",
   "  (",
   "  int",
   "  index",
   "  ,",
   "  Marker",
   "  marker",
   "  ,",
   "  Layer",
   "  layer",
   "  ,",
   "  arkers",
   "  =",
   "  (",
   "  ArrayList",
   "  )",
   "  this",
   "  .",
   "  backgroundDomainMarkers",
   "  .",
   "  get",
   "  (",
   "  new",
   "  Integer",
   "  (",
   "  ndex",
   "  )",
   "  )",
   "  ;",
   "  if",
   "  (",
   "  markers",
   "  ==",
   "  null",
   "  )",
   "  {",
   "- if",
   "- (",
   "- markers",
   "- ==",
   "- null",
   "- )",
   "- {",
   "  return",
   "  false",
   "  ;",
   "- return",
   "- false",
   "- ;",
   "- }",
   "  }",
   "  oolean",
   "  removed",
   "  =",
   "  markers",
   "  .",
   "  remove",
   "  (",
   "  marker",
   "  )",
   "  ;",
   "  f",
   "  (",
   "  removed",
   "  &&",
   "  notify",
   "  )",
   "  {",
   "  ireChangeEvent",
   "  (",
   "  )",
   "  ;"
  ]
 },
 {
  "number": 14,
  "changes_set": [
   "  ublic",
   "  boolean",
   "  removeRangeMarker",
   "  (",
   "  int",
   "  index",
   "  ,",
   "  Marker",
   "  marker",
   "  ,",
   "  Layer",
   "  layer",
   "  ,",
   "  arkers",
   "  =",
   "  (",
   "  ArrayList",
   "  )",
   "  this",
   "  .",
   "  backgroundRangeMarkers",
   "  .",
   "  get",
   "  (",
   "  new",
   "  Integer",
   "  (",
   "  ndex",
   "  )",
   "  )",
   "  ;",
   "  if",
   "  (",
   "  markers",
   "  ==",
   "  null",
   "  )",
   "  {",
   "- if",
   "- (",
   "- markers",
   "- ==",
   "- null",
   "- )",
   "- {",
   "  return",
   "  false",
   "  ;",
   "- return",
   "- false",
   "- ;",
   "- }",
   "  }",
   "  oolean",
   "  removed",
   "  =",
   "  markers",
   "  .",
   "  remove",
   "  (",
   "  marker",
   "  )",
   "  ;",
   "  f",
   "  (",
   "  removed",
   "  &&",
   "  notify",
   "  )",
   "  {",
   "  ireChangeEvent",
   "  (",
   "  )",
   "  ;"
  ]
 },
 {
  "number": 14,
  "changes_set": [
   "  ublic",
   "  boolean",
   "  removeDomainMarker",
   "  (",
   "  int",
   "  index",
   "  ,",
   "  Marker",
   "  marker",
   "  ,",
   "  Layer",
   "  layer",
   "  ,",
   "  arkers",
   "  =",
   "  (",
   "  ArrayList",
   "  )",
   "  this",
   "  .",
   "  backgroundDomainMarkers",
   "  .",
   "  get",
   "  (",
   "  new",
   "  Integer",
   "  (",
   "  ndex",
   "  )",
   "  )",
   "  ;",
   "  if",
   "  (",
   "  markers",
   "  ==",
   "  null",
   "  )",
   "  {",
   "- if",
   "- (",
   "- markers",
   "- ==",
   "- null",
   "- )",
   "- {",
   "  return",
   "  false",
   "  ;",
   "- return",
   "- false",
   "- ;",
   "- }",
   "  }",
   "  oolean",
   "  removed",
   "  =",
   "  markers",
   "  .",
   "  remove",
   "  (",
   "  marker",
   "  )",
   "  ;",
   "  f",
   "  (",
   "  removed",
   "  &&",
   "  notify",
   "  )",
   "  {",
   "  ireChangeEvent",
   "  (",
   "  )",
   "  ;"
  ]
 },
 {
  "number": 14,
  "changes_set": [
   "  ublic",
   "  boolean",
   "  removeRangeMarker",
   "  (",
   "  int",
   "  index",
   "  ,",
   "  Marker",
   "  marker",
   "  ,",
   "  Layer",
   "  layer",
   "  ,",
   "  arkers",
   "  =",
   "  (",
   "  ArrayList",
   "  )",
   "  this",
   "  .",
   "  backgroundRangeMarkers",
   "  .",
   "  get",
   "  (",
   "  new",
   "  Integer",
   "  (",
   "  ndex",
   "  )",
   "  )",
   "  ;",
   "  if",
   "  (",
   "  markers",
   "  ==",
   "  null",
   "  )",
   "  {",
   "- if",
   "- (",
   "- markers",
   "- ==",
   "- null",
   "- )",
   "- {",
   "  return",
   "  false",
   "  ;",
   "- return",
   "- false",
   "- ;",
   "- }",
   "  }",
   "  oolean",
   "  removed",
   "  =",
   "  markers",
   "  .",
   "  remove",
   "  (",
   "  marker",
   "  )",
   "  ;",
   "  f",
   "  (",
   "  removed",
   "  &&",
   "  notify",
   "  )",
   "  {",
   "  ireChangeEvent",
   "  (",
   "  )",
   "  ;"
  ]
 },
 {
  "number": 21,
  "changes_set": [
   "  ublic",
   "  void",
   "  add",
   "  (",
   "  BoxAndWhiskerItem",
   "  item",
   "  ,",
   "  Comparable",
   "  rowKey",
   "  ,",
   "  &",
   "  this",
   "  .",
   "  minimumRangeValueColumn",
   "  ==",
   "  c",
   "  )",
   "  )",
   "  {",
   "  pdateBounds",
   "  (",
   "  )",
   "  ;",
   "  else",
   "  {",
   "- else",
   "- {",
   "  ouble",
   "  minval",
   "  =",
   "  Double",
   "  .",
   "  NaN",
   "  ;",
   "  f",
   "  (",
   "  item",
   "  .",
   "  getMinOutlier",
   "  (",
   "  )",
   "  !=",
   "  null",
   "  )",
   "  {"
  ]
 },
 {
  "number": 21,
  "changes_set": [
   "  lse",
   "  if",
   "  (",
   "  minval",
   "  <",
   "  this",
   "  .",
   "  minimumRangeValue",
   "  )",
   "  {",
   "  his",
   "  .",
   "  minimumRangeValueRow",
   "  =",
   "  r",
   "  ;",
   "  his",
   "  .",
   "  minimumRangeValueColumn",
   "  =",
   "  c",
   "  ;",
   "  }",
   "- }",
   "  his",
   "  .",
   "  rangeBounds",
   "  =",
   "  new",
   "  Range",
   "  (",
   "  this",
   "  .",
   "  minimumRangeValue",
   "  ,",
   "  his",
   "  .",
   "  maximumRangeValue",
   "  )",
   "  ;"
  ]
 },
 {
  "number": 21,
  "changes_set": [
   "  ublic",
   "  List",
   "  getOutliers",
   "  (",
   "  Comparable",
   "  rowKey",
   "  ,",
   "  Comparable",
   "  columnKey",
   "  )",
   "  {",
   "  /",
   "  rivate",
   "  void",
   "  updateBounds",
   "  (",
   "  )",
   "  {",
   "  his",
   "  .",
   "  minimumRangeValue",
   "  =",
   "  Double",
   "  .",
   "  NaN",
   "  ;",
   "  this",
   "  .",
   "  minimumRangeValueRow",
   "  =",
   "  -",
   "  1",
   "  ;",
   "  this",
   "  .",
   "- minimumRangeValueRow",
   "- =",
   "- -",
   "- 1",
   "- ;",
   "- this",
   "- .",
   "  minimumRangeValueColumn",
   "  =",
   "  -",
   "  1",
   "  ;",
   "- this",
   "- .",
   "- minimumRangeValueColumn",
   "- =",
   "- -",
   "- 1",
   "- ;",
   "  his",
   "  .",
   "  maximumRangeValue",
   "  =",
   "  Double",
   "  .",
   "  NaN",
   "  ;",
   "  this",
   "  .",
   "  maximumRangeValueRow",
   "  =",
   "  -",
   "  1",
   "  ;",
   "  this",
   "  .",
   "- maximumRangeValueRow",
   "- =",
   "- -",
   "- 1",
   "- ;",
   "- this",
   "- .",
   "  maximumRangeValueColumn",
   "  =",
   "  -",
   "  1",
   "  ;",
   "- this",
   "- .",
   "- maximumRangeValueColumn",
   "- =",
   "- -",
   "- 1",
   "- ;",
   "  int",
   "  rowCount",
   "  =",
   "  getRowCount",
   "- (",
   "- )",
   "- ;",
   "- int",
   "- rowCount",
   "- =",
   "- getRowCount",
   "- (",
   "- )",
   "- ;",
   "- int",
   "- columnCount",
   "- =",
   "- getColumnCount",
   "  (",
   "  )",
   "  ;",
   "  int",
   "  columnCount",
   "  =",
   "  getColumnCount",
   "  (",
   "  )",
   "  ;",
   "  for",
   "  (",
   "  int",
   "  r",
   "  =",
   "  0",
   "  ;",
   "  r",
   "  <",
   "  rowCount",
   "  ;",
   "  r",
   "  ++",
   "  )",
   "  {",
   "  for",
   "  (",
   "  int",
   "- r",
   "- =",
   "- 0",
   "- ;",
   "- r",
   "- <",
   "- rowCount",
   "- ;",
   "- r",
   "- ++",
   "- )",
   "- {",
   "- for",
   "- (",
   "- int",
   "  c",
   "  =",
   "  0",
   "  ;",
   "  c",
   "  <",
   "  columnCount",
   "  ;",
   "  c",
   "  ++",
   "  )",
   "  {",
   "- for",
   "- (",
   "- int",
   "- c",
   "- =",
   "- 0",
   "- ;",
   "- c",
   "- <",
   "- columnCount",
   "- ;",
   "- c",
   "- ++",
   "- )",
   "- {",
   "- BoxAndWhiskerItem",
   "- item",
   "- =",
   "- getItem",
   "- (",
   "- r",
   "- ,",
   "- c",
   "- )",
   "- ;",
   "  BoxAndWhiskerItem",
   "  item",
   "  =",
   "  getItem",
   "  (",
   "  r",
   "  ,",
   "  c",
   "  )",
   "  ;",
   "  if",
   "  (",
   "  item",
   "  !=",
   "  null",
   "  )",
   "  {",
   "- if",
   "- (",
   "- item",
   "- !=",
   "- null",
   "- )",
   "- {",
   "- Number",
   "- min",
   "- =",
   "- item",
   "- .",
   "- getMinOutlier",
   "- (",
   "- )",
   "- ;",
   "  Number",
   "  min",
   "  =",
   "  item",
   "  .",
   "  getMinOutlier",
   "  (",
   "  )",
   "  ;",
   "  if",
   "  (",
   "  min",
   "  !=",
   "  null",
   "  )",
   "  {",
   "- if",
   "- (",
   "+ double",
   "+ minv",
   "+ =",
   "  min",
   "- !=",
   "- null",
   "- )",
   "- {",
   "- double",
   "- minv",
   "- =",
   "- min",
   "  .",
   "  doubleValue",
   "  (",
   "  )",
   "  ;",
   "- double",
   "- minv",
   "- =",
   "- min",
   "- .",
   "- doubleValue",
   "- (",
   "- )",
   "- ;",
   "  if",
   "  (",
   "  !",
   "  Double",
   "  .",
   "  isNaN",
   "  (",
   "  minv",
   "  )",
   "  )",
   "  {",
   "  if",
   "  (",
   "- !",
   "- Double",
   "- .",
   "- isNaN",
   "- (",
   "- minv",
   "- )",
   "- )",
   "- {",
   "- if",
   "- (",
   "  minv",
   "  <",
   "  this",
   "  .",
   "  minimumRangeValue",
   "  ||",
   "  Double",
   "  .",
   "  isNaN",
   "  (",
   "- if",
   "- (",
   "- minv",
   "- <",
   "  this",
   "  .",
   "  minimumRangeValue",
   "- ||",
   "- Double",
   "- .",
   "- isNaN",
   "- (",
   "- this",
   "- .",
   "- minimumRangeValue",
   "  )",
   "  )",
   "  {",
   "- this",
   "- .",
   "- minimumRangeValue",
   "- )",
   "- )",
   "- {",
   "- this",
   "- .",
   "- minimumRangeValue",
   "- =",
   "- minv",
   "- ;",
   "  this",
   "  .",
   "  minimumRangeValue",
   "  =",
   "  minv",
   "  ;",
   "  this",
   "  .",
   "  minimumRangeValueRow",
   "  =",
   "  r",
   "  ;",
   "  this",
   "  .",
   "- minimumRangeValueRow",
   "- =",
   "- r",
   "- ;",
   "- this",
   "- .",
   "  minimumRangeValueColumn",
   "  =",
   "  c",
   "  ;",
   "- this",
   "- .",
   "- minimumRangeValueColumn",
   "- =",
   "- c",
   "- ;",
   "  }",
   "  }",
   "  }",
   "- }",
   "- }",
   "- }",
   "- Number",
   "- max",
   "- =",
   "- item",
   "- .",
   "- getMaxOutlier",
   "- (",
   "- )",
   "- ;",
   "  Number",
   "  max",
   "  =",
   "  item",
   "  .",
   "  getMaxOutlier",
   "  (",
   "  )",
   "  ;",
   "  if",
   "  (",
   "  max",
   "  !=",
   "  null",
   "  )",
   "  {",
   "- if",
   "- (",
   "+ double",
   "+ maxv",
   "+ =",
   "  max",
   "- !=",
   "- null",
   "- )",
   "- {",
   "- double",
   "- maxv",
   "- =",
   "- max",
   "  .",
   "  doubleValue",
   "  (",
   "  )",
   "  ;",
   "- double",
   "- maxv",
   "- =",
   "- max",
   "- .",
   "- doubleValue",
   "- (",
   "- )",
   "- ;",
   "  if",
   "  (",
   "  !",
   "  Double",
   "  .",
   "  isNaN",
   "  (",
   "  maxv",
   "  )",
   "  )",
   "  {",
   "  if",
   "  (",
   "- !",
   "- Double",
   "- .",
   "- isNaN",
   "- (",
   "- maxv",
   "- )",
   "- )",
   "- {",
   "- if",
   "- (",
   "  maxv",
   "  >",
   "  this",
   "  .",
   "  maximumRangeValue",
   "  ||",
   "  Double",
   "  .",
   "  isNaN",
   "  (",
   "- if",
   "- (",
   "- maxv",
   "- >",
   "  this",
   "  .",
   "  maximumRangeValue",
   "- ||",
   "- Double",
   "- .",
   "- isNaN",
   "- (",
   "- this",
   "- .",
   "- maximumRangeValue",
   "  )",
   "  )",
   "  {",
   "- this",
   "- .",
   "- maximumRangeValue",
   "- )",
   "- )",
   "- {",
   "- this",
   "- .",
   "- maximumRangeValue",
   "- =",
   "- maxv",
   "- ;",
   "  this",
   "  .",
   "  maximumRangeValue",
   "  =",
   "  maxv",
   "  ;",
   "  this",
   "  .",
   "  maximumRangeValueRow",
   "  =",
   "  r",
   "  ;",
   "  this",
   "  .",
   "- maximumRangeValueRow",
   "- =",
   "- r",
   "- ;",
   "- this",
   "- .",
   "  maximumRangeValueColumn",
   "  =",
   "  c",
   "  ;",
   "- this",
   "- .",
   "- maximumRangeValueColumn",
   "- =",
   "- c",
   "- ;",
   "- }",
   "- }",
   "- }",
   "- }",
   "- }",
   "- }",
   "  }",
   "  }",
   "  }",
   "  }",
   "  }",
   "  }",
   "  *",
   "  *"
  ]
 },
 {
  "number": 15,
  "changes_set": [
   "  eturn",
   "  The",
   "  percent",
   "  .",
   "  /",
   "  ublic",
   "  double",
   "  getMaximumExplodePercent",
   "  (",
   "  )",
   "  {",
   "  if",
   "  (",
   "  this",
   "  .",
   "  dataset",
   "  ==",
   "  null",
   "  )",
   "  {",
   "- if",
   "- (",
   "- this",
   "- .",
   "- dataset",
   "- ==",
   "- null",
   "- )",
   "- {",
   "  return",
   "  0.0",
   "  ;",
   "- return",
   "- 0.0",
   "- ;",
   "- }",
   "  }",
   "  ouble",
   "  result",
   "  =",
   "  0.0",
   "  ;",
   "  terator",
   "  iterator",
   "  =",
   "  this",
   "  .",
   "  dataset",
   "  .",
   "  getKeys",
   "  (",
   "  )",
   "  .",
   "  iterator",
   "  (",
   "  )",
   "  ;",
   "  hile",
   "  (",
   "  iterator",
   "  .",
   "  hasNext",
   "  (",
   "  )",
   "  )",
   "  {"
  ]
 },
 {
  "number": 15,
  "changes_set": [
   "  ublic",
   "  PiePlotState",
   "  initialise",
   "  (",
   "  Graphics2D",
   "  g2",
   "  ,",
   "  Rectangle2D",
   "  plotArea",
   "  ,",
   "  iePlotState",
   "  state",
   "  =",
   "  new",
   "  PiePlotState",
   "  (",
   "  info",
   "  )",
   "  ;",
   "  tate",
   "  .",
   "  setPassesRequired",
   "  (",
   "  2",
   "  )",
   "  ;",
   "  if",
   "  (",
   "  this",
   "  .",
   "  dataset",
   "  !=",
   "  null",
   "  )",
   "  {",
   "- if",
   "- (",
   "- this",
   "- .",
   "- dataset",
   "- !=",
   "- null",
   "- )",
   "- {",
   "  tate",
   "  .",
   "  setTotal",
   "  (",
   "  DatasetUtilities",
   "  .",
   "  calculatePieDatasetTotal",
   "  (",
   "  lot",
   "  .",
   "  getDataset",
   "  (",
   "  )",
   "  )",
   "  )",
   "  ;",
   "  }",
   "- }",
   "  tate",
   "  .",
   "  setLatestAngle",
   "  (",
   "  plot",
   "  .",
   "  getStartAngle",
   "  (",
   "  )",
   "  )",
   "  ;",
   "  eturn",
   "  state",
   "  ;"
  ]
 }
 ]